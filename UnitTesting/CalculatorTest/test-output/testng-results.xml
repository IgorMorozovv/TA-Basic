<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="5" total="21" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="Basic Operators" duration-ms="58" started-at="2018-03-19T12:49:05Z" finished-at="2018-03-19T12:49:05Z">
    <groups>
      <group name="basicOperations">
        <method signature="BasicOperators.divTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="divTest" class="com.epam.test.calculator.suites.test.positive.BasicOperators"/>
        <method signature="BasicOperators.multTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="multTest" class="com.epam.test.calculator.suites.test.positive.BasicOperators"/>
        <method signature="BasicOperators.testIsPositive()[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="testIsPositive" class="com.epam.test.calculator.suites.test.positive.BasicOperators"/>
        <method signature="BasicOperators.testPow(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="testPow" class="com.epam.test.calculator.suites.test.positive.BasicOperators"/>
      </group> <!-- basicOperations -->
    </groups>
    <test name="TestNgGroups" duration-ms="58" started-at="2018-03-19T12:49:05Z" finished-at="2018-03-19T12:49:05Z">
      <class name="com.epam.test.calculator.suites.test.positive.BasicOperators">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="beforeClass" is-config="true" duration-ms="8" started-at="2018-03-19T12:49:05Z" finished-at="2018-03-19T12:49:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testIsPositive()[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="testIsPositive" duration-ms="6" started-at="2018-03-19T12:49:05Z" finished-at="2018-03-19T12:49:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsPositive -->
        <test-method status="FAIL" signature="testPow(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="testPow" duration-ms="9" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.9]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.epam.test.calculator.suites.test.positive.BasicOperators.testPow(BasicOperators.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="multTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="multTest" duration-ms="9" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="divTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="divTest" duration-ms="6" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="divTest" duration-ms="4" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.92351654564654]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="FAIL" signature="multTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="multTest" duration-ms="9" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.92351654564654]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [3.92351654564654] but found [3.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [3.92351654564654] but found [3.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at com.epam.test.calculator.suites.test.positive.BasicOperators.multTest(BasicOperators.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="divTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="divTest" duration-ms="1" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="testPow(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="testPow" duration-ms="1" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.92351654564654]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="divTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="divTest" duration-ms="3" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1000.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="testPow(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="testPow" duration-ms="2" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="testPow(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="testPow" duration-ms="1" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1000.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="testPow(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="testPow" duration-ms="1" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="multTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="multTest" duration-ms="3" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="divTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="divTest" duration-ms="1" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="FAIL" signature="multTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="multTest" duration-ms="0" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1000.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-3000.6000000000004] but found [-3001.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-3000.6000000000004] but found [-3001.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at com.epam.test.calculator.suites.test.positive.BasicOperators.multTest(BasicOperators.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(double, double)[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="multTest" duration-ms="1" started-at="2018-03-19T12:49:05Z" data-provider="someDP" finished-at="2018-03-19T12:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.epam.test.calculator.suites.test.positive.BasicOperators@4f18837a]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-19T12:49:05Z" finished-at="2018-03-19T12:49:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.epam.test.calculator.suites.test.positive.BasicOperators -->
    </test> <!-- TestNgGroups -->
  </suite> <!-- Basic Operators -->
</testng-results>
